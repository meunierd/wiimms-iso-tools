
#ifndef WIT_UI_WDF_H
#define WIT_UI_WDF_H

// *************************************************************************
// *****   This file is automatically generated by the tool 'gen-ui'   *****
// *************************************************************************
// *****                 ==> DO NOT EDIT THIS FILE <==                 *****
// *************************************************************************

#include "lib-std.h"
#include "ui.h"

//
///////////////////////////////////////////////////////////////////////////////
///////////////                enum enumOptions                 ///////////////
///////////////////////////////////////////////////////////////////////////////

typedef enum enumOptions
{
	OPT_NONE,

	OPT_VERSION,
	OPT_HELP,
	OPT_XHELP,
	OPT_PACK,
	OPT_UNPACK,
	OPT_CAT,
	OPT_CMP,
	OPT_DUMP,
	OPT_WDF,
	OPT_CISO,
	OPT_WBI,
	OPT_SUFFIX,
	OPT_DEST,
	OPT_DEST2,
	OPT_PRESERVE,
	OPT_SPLIT,
	OPT_SPLIT_SIZE,
	OPT_CHUNK_MODE,
	OPT_CHUNK_SIZE,
	OPT_MAX_CHUNKS,
	OPT_OVERWRITE,
	OPT_STDOUT,
	OPT_KEEP,
	OPT_QUIET,
	OPT_VERBOSE,
	OPT_CHUNK,
	OPT_LONG,
	OPT_IO,
	OPT_TEST,

	OPT__N_TOTAL // == 30

} enumOptions;

//
///////////////////////////////////////////////////////////////////////////////
///////////////                enum enumCommands                ///////////////
///////////////////////////////////////////////////////////////////////////////

typedef enum enumCommands
{
	CMD__NONE,
	CMD__N

} enumCommands;

//
///////////////////////////////////////////////////////////////////////////////
///////////////                   enumGetOpt                    ///////////////
///////////////////////////////////////////////////////////////////////////////

typedef enum enumGetOpt
{
	GO__ERR			= '?',

	GO_CAT			= 'A',
	GO_CISO			= 'C',
	GO_DEST2		= 'D',
	GO_CMP			= 'M',
	GO_PACK			= 'P',
	GO_UNPACK		= 'U',
	GO_VERSION		= 'V',
	GO_WDF			= 'W',
	GO_DUMP			= 'X',
	GO_SPLIT_SIZE		= 'Z',

	GO_STDOUT		= 'c',
	GO_DEST			= 'd',
	GO_HELP			= 'h',
	GO_KEEP			= 'k',
	GO_LONG			= 'l',
	GO_OVERWRITE		= 'o',
	GO_PRESERVE		= 'p',
	GO_QUIET		= 'q',
	GO_SUFFIX		= 's',
	GO_TEST			= 't',
	GO_VERBOSE		= 'v',
	GO_SPLIT		= 'z',

	GO_XHELP		= 0x80,
	GO_WBI,
	GO_CHUNK_MODE,
	GO_CHUNK_SIZE,
	GO_MAX_CHUNKS,
	GO_CHUNK,
	GO_IO,

} enumGetOpt;

//
///////////////////////////////////////////////////////////////////////////////
///////////////                  external vars                  ///////////////
///////////////////////////////////////////////////////////////////////////////

extern const InfoOption_t OptionInfo[OPT__N_TOTAL+1];
extern const char OptionShort[];
extern const struct option OptionLong[];
extern u8 OptionUsed[OPT__N_TOTAL+1];
extern const u8 OptionIndex[OPT_INDEX_SIZE];
extern const InfoCommand_t CommandInfo[CMD__N+1];
extern const InfoUI_t InfoUI;

//
///////////////////////////////////////////////////////////////////////////////
///////////////                       END                       ///////////////
///////////////////////////////////////////////////////////////////////////////

#endif // WIT_UI_WDF_H

